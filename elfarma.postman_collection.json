{
	"info": {
		"_postman_id": "6c42f431-5355-4844-815c-80db29c32b84",
		"name": "elfarma",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19769284",
		"_collection_link": "https://crimson-spaceship-556826.postman.co/workspace/New-Team-Workspace~c2450568-cca1-4023-9abe-1fdda209ff44/collection/19769284-6c42f431-5355-4844-815c-80db29c32b84?action=share&source=collection_link&creator=19769284"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"rm1167616@gmail.com\",\r\n    \"password\":\"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"login"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"radwan moahmed\",\n    \"email\" : \"rm1167616@gmail.com\",\n    \"password\":\"123\",\n    \"phone\":\"01223740125\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "admin function",
			"item": [
				{
					"name": "create new admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "f712c99673317cd6dae44145813a3398",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"radwan moahmed\",\r\n    \"email\" : \"rmm1167616@gmail.com\",\r\n    \"password\":\"123\",\r\n    \"phone\":\"01223740125\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/createadmin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"createadmin"
							]
						}
					},
					"response": []
				},
				{
					"name": "creat news",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "f712c99673317cd6dae44145813a3398",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "        {\r\n            \"writer_name\": \"radwan\",\r\n            \"name\": \"mosaa\",\r\n            \"content\": \"mosa killed yesterday \",\r\n            \"category\": \"sports\",\r\n            \"pic_path\": \"pfmeonwfpwenfpow[pekf[ke\",\r\n            \"publicID\": \"knsdpovnsp[\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/creatnews/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"creatnews",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create ads",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "f712c99673317cd6dae44145813a3398",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Radwan\",\r\n    \"description\":\"fwfdwefcwav\",\r\n    \"ads_img\":\"wefawerfvas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/createads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"createads"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user function",
			"item": [
				{
					"name": "get post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/getpost/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"getpost",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/getallnews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"getallnews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all ads",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/getallads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"getallads"
							]
						}
					},
					"response": []
				},
				{
					"name": "create comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n                \"email\": \"jwbfscyebv\",\r\n                \"desc\": \"woqfnqnfcilaen\",\r\n                \"postID\": \"30\"\r\n            }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/createcomment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"createcomment"
							]
						}
					},
					"response": []
				},
				{
					"name": "get comment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postid\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/getcomment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"getcomment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "gets",
			"item": [
				{
					"name": "get by category",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"catName\":\"sports\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/catget",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"catget"
							]
						}
					},
					"response": []
				},
				{
					"name": "get popular news",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/mostpopular",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"mostpopular"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastest news",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/lastestnews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"lastestnews"
							]
						}
					},
					"response": []
				},
				{
					"name": "last by cat",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"catname\":\"hr\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4004/lastbycat",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"lastbycat"
							]
						}
					},
					"response": []
				},
				{
					"name": "last5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4004/last5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4004",
							"path": [
								"last5"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}